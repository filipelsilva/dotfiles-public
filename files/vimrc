source $HOME/dotfiles/files/defaults.vim

" Plugins {{{
function! PackInit() abort
	packadd minpac
	call minpac#init()
	call minpac#add('k-takata/minpac', {'type': 'opt'})

	" Identation detector
	call minpac#add('timakro/vim-yadi')

	" Comment stuff
	call minpac#add('tpope/vim-commentary')

	" Surround stuff
	call minpac#add('tpope/vim-surround')

	" Colorscheme
	call minpac#add('lifepillar/vim-gruvbox8')

	" Fzf
	call minpac#add('junegunn/fzf.vim')

	" Lsp and completion
	call minpac#add('neoclide/coc.nvim', {'branch': 'release'})

endfunction

command! PackUpdate call PackInit() | call minpac#update()
command! PackClean  call PackInit() | call minpac#clean()
" }}}

" Colorscheme
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set cursorlineopt=number
set cursorline
set background=dark
set termguicolors
colorscheme gruvbox8_hard
highlight! link CursorLineNr LineNr
highlight! link EndOfBuffer LineNr

" DetectIndent
augroup DetectIndent
	autocmd!
	autocmd BufRead * DetectIndent
augroup END

" Fzf {{{
set runtimepath+=$HOME/.fzf

function! s:build_quickfix_list(lines)
	call setqflist(map(copy(a:lines), '{ "filename": v:val }'))
	copen
	cc
endfunction

let g:fzf_action = {
	\ 'ctrl-q': function('s:build_quickfix_list'),
	\ 'ctrl-t': 'tab split',
	\ 'ctrl-s': 'split',
	\ 'ctrl-v': 'vsplit' }
" let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.7 } }
let g:fzf_layout = { 'down': '30%' }
let g:fzf_buffers_jump = 1

nnoremap <silent> <expr> <Leader>f (len(system('git rev-parse')) ? ':Files' : ':GFiles')."\<CR>"
nnoremap <silent> <Leader>F <Cmd>Files $HOME<CR>
nnoremap <silent> <Leader>r <Cmd>Rg<CR>
nnoremap <silent> <Leader>j <Cmd>Buffers<CR>
tnoremap <expr> <Esc> (&filetype == "fzf") ? "<Esc>" : "<C-\><C-n>"
tnoremap <expr> <C-j> (&filetype == "fzf") ? "<C-n>" : "<C-j>"
tnoremap <expr> <C-k> (&filetype == "fzf") ? "<C-p>" : "<C-k>"
" }}}

" Completion
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
let g:coc_snippet_next = "<Tab>"
let g:coc_snippet_prev = "<S-Tab>"
